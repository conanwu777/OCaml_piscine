{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww12560\viewh25460\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Interpreter
\b0 \
#load -for loading library\
#quit\
ocaml < ex00.ml\
\

\b Compilers
\b0 \
ocamlc\
	- compile in byte code\
		(compiles faster)\
and ocamlopt\
	- compile in native language\
		(generally more optimized)\
**both compilers are compiled using ocamlc\
ocamlc.opt\
ocamlopt.opt\
\
oclean - cleans the compilation\
\

\b Compiling
\b0 \
Makefile:\
Linking library:\
WITHGRAPHICS = graphics.cma -cclib -lGraphics\
	- use by calling Graphics.function\
\
Ocamlfind:\
	can find anything, such as libraries etc.\
	\
Ocamlbuild:\
	ocamlbuild -lib graphics test.native\
	ocamlbuild -clean\
\
OCamlMakefile\
	- makes any ocaml project possible\
***********\
RESULT = test\
SOURCES = test.ml\
LIBS = graphics\
OCAMLMAKEFILE = OCamlMakefile\
include $(OCAMLMAKEFILE)\
***********\
make nc ---native\
make bc	---bytecode\
\

\b Modules
\b0 \
Multiple .ml files\
\
Bar.function to use any function in Bar.ml\
--need to first compile .ml files that got used\
\
ex: Foo uses Bar\
ocamlopt -c Bar.ml\
ocamlopt Bar.ml Foo.ml\
\
keyword "open" - save the "XXX." but when there are same function name in multiple files can be problematic\
\

\b Link external libraries
\b0 \
OCaml has many built-in structures that bridge C libraries\
\
RESULT = testsdl\
SOURCES = testsdl.ml\
LIBS = bigarray sdl      ------- SDL uses bigarray\
INCDIRS = +sdl      ------ finds sdl directory\
OCAMLLDFLAGS = -cclib "-framework Cocoa" . ---specify C version of the library (Cocoa framework for debugging)\
THREADS = true -----run compile in threads\
include OCamlMakefile\
\
let rec wait_for_escape () =\
	match Sdlevent.wait_event () with\
	| Sdlevent.KEYDOWN \{ Sdlevent.keysym = Sdlkey.KET_ESCAPE\} ->\
		print_endline "Bye."\
	|event ->\
		print_endline (Sdlevent.string_of_event event);\
		wait_for_escape ()\
let () =\
	Sdl.init [`VIDEO] -----polymorphed variant\
	at_exit Sdl.quit;\
	ignore(Sdlvideo.set_video_mode 400 400 []);       ------ignores the return type since this returns uint but main returns ()\
	wait_for_escape ()\
\
OPAM install ocaml sdl\
\
GTK library ----useful for UIs\
\
\

\b OPAM
\b0  - OCaml package manager\
	- built-in reference to all external OCaml libraries\
****\
brew install OPAM\
opam init\
eval 'opam config env'\
****\
opam list -a ---------lists all packages avaliable\
	labelgl ----interface for OpenGL\
opam install packagename ------installs package\
opam remove packagename ------delete package\
opam list ---------list current packages\
	merlin --------helps with vim and emacs\
opam update ------upgrades everything to latest version\
\

\b File types
\b0 \
.ml --------source files\
.mli, .cli --------interface files\
.cmi ---------compiled interface file\
.cmo -------object file for bytecode\
.cmx --------object file for native\
.cma ---------library\
.cmxa --------compiled library\

\b \
argc argv
\b0 \
let main ac av\
	XXXXXXXXX\
let () =\
	let argv = Array.to_list Sys.argv in\
		main (List.length argv) argv\
\
}